% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/factormar.R
\name{factormar}
\alias{factormar}
\title{Generate Dummy Variables for marcox Analysis}
\usage{
factormar(typename, d_v = NULL, cluster22)
}
\arguments{
\item{typename}{Character. The name of the categorical column for which dummy variables should be created. It must be a single string representing the column name.}

\item{d_v}{Optional. A vector specifying which categories should be converted into dummy variables.
Dummy variables will be generated for the values in \code{d_v}, while any values not included in this vector will be assigned an all-zero dummy variable.
If \code{d_v} is omitted, the function will automatically generate dummy variables based on all unique values in the \code{typename} column.}

\item{cluster22}{temporary value.}
}
\value{
A list containing:
\itemize{
\item A vector including the original \code{typename} and the names of the generated dummy variables.
\item A data frame with the newly created dummy variables appended to the original dataset.
}
}
\description{
This function creates dummy variables for a specified categorical column, typically used within the \code{formula} parameter in the \code{marcox()} function.
If \code{d_v} is not provided, dummy variables will be automatically generated based on the unique values in the specified \code{typename} column.
}
\details{
This function is primarily used to prepare categorical data for analysis within \code{marcox()}.
If the \code{d_v} parameter is omitted, the function automatically determines the categories from the \code{typename} column and creates dummy variables accordingly.
The resulting dummy variables will be added to the original data frame (\code{cluster2}).

When providing the \code{d_v} parameter, it must explicitly specify which categories should be converted into dummy variables.
If categorical variables (e.g., \code{type}) are included, they should be passed as strings when using \code{factormar()}.

Generally, binary covariates should not be converted into dummy variables using \code{factormar()}, as this may introduce unexpected errors.
}
